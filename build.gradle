buildscript {
	repositories {
		maven {
			url "http://packages.confluent.io/maven/"
		}
	}
}

plugins {
	id 'org.springframework.boot' version '2.1.6.RELEASE'
	id 'java'
	id "com.commercehub.gradle.plugin.avro" version "0.9.1"
	id "com.github.imflog.kafka-schema-registry-gradle-plugin" version "0.7.0"
}

apply plugin: 'io.spring.dependency-management'

group = 'com.example.kafka'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
	maven { url "http://packages.confluent.io/maven/" }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'org.apache.avro:avro:1.9.0'
	implementation 'io.confluent:kafka-avro-serializer:5.2.1'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
}

sourceSets {
	main {
		java {
			srcDir "$buildDir/generated/avro-schema"
		}
	}
}

task generateAvro(type: com.commercehub.gradle.plugin.avro.GenerateAvroJavaTask) {
	source("src/main/resources/avro")
	outputDir = file("$buildDir/generated/avro-schema")
}

compileJava.source(generateAvro.outputs)

schemaRegistry {
	url = 'http://localhost:8086'
	register {
		subject('user', 'src/main/resources/avro/user.avsc')
	}
}
